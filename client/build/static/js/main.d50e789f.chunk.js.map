{"version":3,"sources":["pages/Admin.js","pages/Student.js","pages/Sign-in.js","pages/Sign-up.js","App.js","reportWebVitals.js","index.js"],"names":["Admin","react_default","a","createElement","Student","SignIn","_useState","useState","_useState2","Object","slicedToArray","first_name","setFirstName","_useState3","_useState4","last_name","setLastName","_useState5","_useState6","email","setEmail","_useState7","_useState8","type","setType","className","onChange","event","target","value","onClick","Axios","post","then","console","log","SignUp","fname","setFname","lname","setLname","App","dist","react_router_dist","path","element","Sign_in","Sign_up","pages_Admin","pages_Student","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d50e789f.chunk.js","sourcesContent":["//Landing Page for Boomerang Staff\r\nimport React from \"react\";\r\n\r\nfunction Admin() {\r\n  return (\r\n    <div>\r\n      <h1> Boomerang Staff, welcome to ATS</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","//Landing Page for Boomerang Student\r\n\r\nimport React from \"react\";\r\n\r\nfunction Student() {\r\n  return (\r\n    <div>\r\n      <h1> Student, welcome to ATS</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Student;\r\n","//Landing Page for Boomerang Staff\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nfunction SignIn() {\r\n  //Keeps track of changes to name input box\r\n  const [first_name, setFirstName] = useState(\"\");\r\n  //Keeps track of changes to  last name input box\r\n  const [last_name, setLastName] = useState(\"\");\r\n  //Keeps track of changes to email input box\r\n  const [email, setEmail] = useState(\"\");\r\n  //Keeps track of changes to type input box\r\n  const [type, setType] = useState(\"\");\r\n\r\n  /*\r\n    Meant to be the function that sends \"credentials\" input on the boxes\r\n    to the backend for authenctication. Currently is just making a get request to /insert\r\n    but I envisioned been whatever authentication endpoint we are thinking of\r\n    */\r\n  const signIn = () => {\r\n    Axios.post(\"http://localhost:3000/users/create\", {\r\n      first_name: first_name,\r\n      last_name: last_name,\r\n      email: email,\r\n      type: type,\r\n    }).then(() => {\r\n      console.log(\"success\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"information\">\r\n        {/*First name input box*/}\r\n        <label>First Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(event) => {\r\n            setFirstName(event.target.value);\r\n          }}\r\n        />\r\n        {/*Last name input box*/}\r\n        <label>Last Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(event) => {\r\n            setLastName(event.target.value);\r\n          }}\r\n        />\r\n        {/*Email input box*/}\r\n        <label>Email:</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(event) => {\r\n            setEmail(event.target.value);\r\n          }}\r\n        />\r\n        {/*Type input box*/}\r\n        <label>Type:</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(event) => {\r\n            setType(event.target.value);\r\n          }}\r\n        />\r\n        {/*Sign-in button that will fire the call to endpoint in the backend*/}\r\n        <button onClick={signIn}>Sign-in</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nfunction SignUp() {\r\n  //Keeps track of changes to name input box\r\n  const [fname, setFname] = useState(\"\");\r\n  //Keeps track of changes to  last name input box\r\n  const [lname, setLname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  /*\r\n    Meant to be the function that sends \"credentials\" input on the boxes\r\n    to the backend to be added to users database. Currently is just making a get request to /insert\r\n    but I envisioned been whatever creation endpoint we are thinking of\r\n    */\r\n  const addStudent = () => {\r\n    Axios.post(\"http://localhost:3000/insert\", {\r\n      fname: fname,\r\n      lname: lname,\r\n      email: email,\r\n    }).then(() => {\r\n      console.log(\"succes\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"information\">\r\n        {/*First name input box*/}\r\n        <label>First Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(event) => {\r\n            setFname(event.target.value);\r\n          }}\r\n        />\r\n        {/*Last name input box*/}\r\n        <label>Last Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(event) => {\r\n            setLname(event.target.value);\r\n          }}\r\n        />\r\n        {/*Email input box*/}\r\n        <label>Email:</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(event) => {\r\n            setEmail(event.target.value);\r\n          }}\r\n        />\r\n        {/*Sign-up button that will fire the call to endpoint in the backend*/}\r\n        <button onClick={addStudent}>Add Student</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport Admin from \"./pages/Admin\";\r\nimport Student from \"./pages/Student\";\r\nimport SignIn from \"./pages/Sign-in\";\r\nimport SignUp from \"./pages/Sign-up\";\r\n\r\nfunction App() {\r\n  return (\r\n    //Browserrouter component from react-router-dom\r\n    <Router>\r\n      <Routes>\r\n        {/* This section creates the different paths to the different pages*/}\r\n        <Route path=\"/\" element={<SignIn />} />\r\n        <Route path=\"/sign-up\" element={<SignUp />} />\r\n        <Route path=\"/admin\" element={<Admin />} />\r\n        <Route path=\"/student\" element={<Student />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}